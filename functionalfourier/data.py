# AUTOGENERATED! DO NOT EDIT! File to edit: ../Notebooks/01_data.ipynb.

# %% auto 0
__all__ = ['load_data']

# %% ../Notebooks/01_data.ipynb 1
import numpy as np
import tensorflow as tf

# %% ../Notebooks/01_data.ipynb 3
def load_cifar10():
    from tensorflow.keras.datasets import cifar10
    
    (X_train, Y_train), (X_test, Y_test) = cifar10.load_data()
    X_train = X_train/255.
    X_test = X_test/255.
    Y_train = Y_train.astype(np.int32)[...,0]
    Y_test = Y_test.astype(np.int32)[...,0]
    
    return (X_train, Y_train), (X_test, Y_test)

# %% ../Notebooks/01_data.ipynb 4
def load_mnist():
    from tensorflow.keras.datasets import mnist
    
    (X_train, Y_train), (X_test, Y_test) = mnist.load_data()
    X_train = X_train[...,None]/255.
    X_test = X_test[...,None]/255.
    Y_train = Y_train.astype(np.int32)
    Y_test = Y_test.astype(np.int32)

    return (X_train, Y_train), (X_test, Y_test)

# %% ../Notebooks/01_data.ipynb 5
def load_cats_vs_dogs():
    import tensorflow_datasets as tfds

    dst = tfds.load("cats_vs_dogs", split="train")
    dst = dst.map(lambda x: (x["image"], x["label"]), num_parallel_calls=tf.data.AUTOTUNE)
    return dst

# %% ../Notebooks/01_data.ipynb 6
def load_data(name: str):
    if name == "cifar10":
        (X_train, Y_train), (X_test, Y_test) = load_cifar10()

    elif name == "mnist":
        (X_train, Y_train), (X_test, Y_test) = load_mnist()

    elif name == "cats_vs_dogs":
        dst = load_cats_vs_dogs()
